# Deep Learning Infrastructure Release
#
# This pipeline's scope is to validate and deploy infrastructural
# changes to the training environments for deep learning. This includes:
#
# * a stage to publish ARM templates and tests
# * a stage to deploy and validate the functional working of the
#   deployed infrastructure in an integration environment
# * the execution of tests scoped to custom roles in the AAD tenant
# * the deployment to the training environments
#   * dev
#   * int
#   * prod
#
# This pipeline is automatically triggered on any change in the arm-templates
# folder containing this ADO pipeline definition and infra-as-code.

trigger:
  branches:
    include:
    - master

  paths:
    include:
    - infrastructure/arm-templates/*
    - infrastructure/deploy-infra/*


# loading all variables groups once, to resolve Azure DevOps problems with resolving variables
variables:
- group: aksbp-aml
- group: aksbp-dev
- group: aksbp-int
- group: aksbp-prd

stages:
# Validate and publish dependencies for downstream stages
- stage: Build
  displayName: 'IaC Build'
  jobs:
  - job: Build
    pool:
        # does not make sense to use self-hosted agents here
        vmImage: 'ubuntu-latest'
    steps:
    - task: CopyFiles@2
      displayName: 'Copy tests'
      inputs:
        sourceFolder: 'tests/infrastructure'
        targetFolder: '$(Build.ArtifactStagingDirectory)/tests'
    - task: CopyFiles@2
      displayName: 'Copy Deployment scripts'
      inputs:
        sourceFolder: 'infrastructure/deployment-scripts'
        targetFolder: '$(Build.ArtifactStagingDirectory)/scripts'
    - task: CopyFiles@2
      displayName: 'Copy ARM templates'
      inputs:
        sourceFolder: 'infrastructure/arm-templates'
        targetFolder: '$(Build.ArtifactStagingDirectory)'
    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: IaCAndTests

# Deploy Dev 
- stage: DeployDevInfra
  displayName: 'Deploy: DEV'
  variables:
  - group: aksbp
  - group: aksbp-dev
  - name: armArtifactName
    value: IaCAndTests
  - name: sharedTemplatesPipelineDefinitionId
    value: 4531
  - name: sharedTemplatesArtifactName
    value: k8bpit_SHARED_TEMPLATES
  - name: resource_group_name
    value: aksbp-aml-dev

  jobs:
  - template: ado-template-mlenv.yml
    parameters:
      environment: 'aksbp-aml-dev'
      agentpool: 'project-CPU-Deep-dev'
      workspaces:
      - cv1

# Deploy Integration Environment, Run Post-Deployment Tests
- stage: DeployIntInfra
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  displayName: 'Deploy: INT'
  variables:
  - group: aksbp-int
  - name: armArtifactName
    value: IaCAndTests
    # value: aksbp-infra-validated
  - name: sharedTemplatesPipelineDefinitionId
    value: 4531
  - name: sharedTemplatesArtifactName
    value: k8bpit_SHARED_TEMPLATES
  - name: resource_group_name
    value: aksbp-aml-int

  jobs:
  - template: ado-template-mlenv.yml
    parameters:
      environment: 'aksbp-aml-int'
      agentpool: 'project-CPU-Deep-int'
      workspaces:
      - integration
      - tl
      - ts
      - vru
      - unittests
      - lidar
      - cv2
      - cv1
      - monitoring
      - radar
      - blockage

# Run Custom Role Tests
# After having run these tests, we publish the infrastructure
# templates as new artifacts 'aksbp-infra-validated'. These artifacts
# are then used for the INT and PROD environment deployments.
# Commented since we do not have the model developer role as service connection in ADO today
# - stage: CustomRoleValidation
#   displayName: 'Test Custom Roles'
#   variables:
#   - group: aksbp-int
#   - name: armArtifactName
#     value: IaCAndTests
#   - name: workspaceName
#     value: aksbp-integration-aml #-{env}
#   - name: containerRegistryInstance
#     value: aksbpacrint

#   jobs:
#   - job: CNNRoleTest
#     pool:
#       name: 'project-CPU-Deep-int'
#     steps:
#     - download: current
#       artifact: $(armArtifactName)
#     - template: ado-template-mlenv-tests.yml
#       parameters:
#         report_name: 'model_developer'
#         spc: 'aksbp-poc-dev-model-developer-role'
#     # Publish Validated Artifacts for Environment Deployments
#     - publish: '$(Pipeline.Workspace)/$(armArtifactName)'
#       artifact: aksbp-infra-validated
#       condition: succeeded()
#       displayName: 'Published Validated Artifacts (ARM + Tests)'

# # Deploy Prd Environment, Run Post-Deployment Tests
- stage: DeployPrdInfra
  displayName: 'Deploy: PRD'
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  variables:
  - group: aksbp-prd
  - name: armArtifactName
    value: IaCAndTests
    # value: aksbp-infra-validated
  - name: sharedTemplatesPipelineDefinitionId
    value: 4531
  - name: sharedTemplatesArtifactName
    value: k8bpit_SHARED_TEMPLATES
  - name: resource_group_name
    value: aksbp-aml-prd

  jobs:
  - template: ado-template-mlenv.yml
    parameters:
      environment: 'aksbp-aml-prd'
      agentpool: 'project-CPU-Deep-prd'
      workspaces:
      - tl
      - ts
      - vru
      - unittests
      - lidar
      - cv2
      - cv1
      - radar
      - blockage
