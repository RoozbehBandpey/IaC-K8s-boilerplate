# Kubernetes Infrastructure Release
#
# This pipeline's scope is to validate and deploy infrastructural
# changes to the K8s environments. This includes:
#
# * a stage to publish TF templates and tests
# * a stage to deploy and validate the functional working of the
#   deployed infrastructure in an integration environment
#
# This pipeline is automatically triggered on any change in the tf-templates
# folder containing this ADO pipeline definition and infra-as-code.

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - azure-k8-service/infrastructure/tf-templates/*
    - azure-k8-service/infrastructure/deploy_infra/terraform/*
pr:
  branches:
    include:
    - master
  paths:
    include:
    - azure-k8-service/infrastructure/tf-templates/*
    - azure-k8-service/infrastructure/deploy_infra/terraform/*

pool:
  vmImage: 'ubuntu-latest'

# loading all variables groups once, to resolve Azure DevOps problems with resolving variables
variables:
- group: k8-vg-dev


stages:
# Validate and publish dependencies for downstream stages
- stage: Build
  displayName: 'IaC Build'
  jobs:
  - job: Build
    pool:
        # does not make sense to use self-hosted agents here
        vmImage: 'ubuntu-latest'
    steps:   
    - task: CopyFiles@2
      displayName: 'Copy Deployment scripts'
      inputs:
        sourceFolder: 'azure-k8-service/infrastructure/deployment-scripts'
        targetFolder: '$(Build.ArtifactStagingDirectory)/scripts'
    # - task: CopyFiles@2
    #   displayName: 'Copy ARM templates'
    #   inputs:
    #     sourceFolder: 'infrastructure/arm-templates'
    #     targetFolder: '$(Build.ArtifactStagingDirectory)'
    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: IaCAndTests

# Deploy Dev 
- stage: DeployDevInfra
  displayName: 'Deploy: DEV'
  dependsOn: build
  variables:
  - group: k8-vg-dev
  - name: armArtifactName
    value: IaCAndTests

  jobs:
  - template: ado-template-k8env.yml
    parameters:
      vmImage: 'ubuntu-latest'
      environment: 'dev'
