# Template pipeline for the deployment of shared infrastructure
# that the ML workspaces depend on.
#
# This pipeline deploys a KeyVault instance, Two Storage accounts (one
# for the ML workspace logs, one as a shared data store), two Container
# Registries (one staging, one ML workspace-related) and an Application
# Insights instance. Storage accounts are preconfigured with a set of blob
# containers (initialization, metrics, datasets, ..)

steps:
  # - task: AzureCLI@2
  #   displayName: Check if KeyVault exists
  #   condition: ne(variables['deploymentMode'], 'Validation')
  #   inputs:
  #     azureSubscription: $(AZURE_RM_SVC_CONNECTION)
  #     scriptType: 'bash'
  #     scriptLocation: 'scriptPath'
  #     scriptPath: azure-k8-service/infrastructure/deployment-scripts/check-keyvault.sh
  #     arguments: '$(BASE_NAME) $(ENV)'

  - task: AzureCLI@1
    displayName: Check if KeyVault exists
    condition: ne(variables['deploymentMode'], 'Validation')
    inputs:
      scriptType: 'bash'
      azureSubscription: $(AZURE_RM_SVC_CONNECTION)
      scriptLocation: inlineScript
      workingDirectory: $(Pipeline.Workspace)/$(armArtifactName)/scripts
      inlineScript: 'sh check-keyvault.sh $(BASE_NAME) $(ENV)'
  
  # - task: AzureCLI@2
  #   inputs:
  #     azureSubscription: 'kubernetes-infra-release'
  #     scriptType: 'bash'
  #     scriptLocation: 'inlineScript'
  #     inlineScript: 'echo ********************  $(deploymentMode)'


# - task: AzureResourceGroupDeployment@2
#   displayName: 'Deployment: Container Registry'
#   inputs:
#     azureSubscription: $(AZURE_RM_SVC_CONNECTION)
#     resourceGroupName: $(BASE_NAME)-rg-$(ENV)
#     location: $(location)
#     csmFile: '$(Pipeline.Workspace)/$(armArtifactName)/container-registry/template.json'
#     csmParametersFile: '$(Pipeline.Workspace)/$(armArtifactName)/container-registry/parameters.$(ENV).json'
#     deploymentMode: $(deploymentMode)

# - task: AzureResourceGroupDeployment@2
#   displayName: 'Deployment: Key Vault'
#   inputs:
#     azureSubscription: $(serviceConnection)
#     resourceGroupName: $(resource_group_name)
#     location: $(location)
#     csmFile: '$(Pipeline.Workspace)/$(armArtifactName)/keyvault/template.json'
#     csmParametersFile: '$(Pipeline.Workspace)/$(armArtifactName)/keyvault/parameters.$(environment).json'
#     addSpnToEnvironment: true
#     overrideParameters: -name "aksbp-kv-$(environment)" -objectId $servicePrincipalId -createMode $(createmode)
#     deploymentMode: $(deploymentMode)

  - task: AzureResourceManagerTemplateDeployment@3
    displayName: 'Deployment: Key Vault'
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: $(AZURE_RM_SVC_CONNECTION)
      action: 'Create Or Update Resource Group'
      resourceGroupName: $(BASE_NAME)-rg-$(ENV)
      location: $(LOCATION)
      templateLocation: 'Linked artifact'
      csmFile: 'azure-k8-service/infrastructure/arm-templates/keyvault/template.json'
      csmParametersFile: 'azure-k8-service/infrastructure/arm-templates/keyvault/parameters.$(ENV).json'
      deploymentMode: $(deploymentMode)
      overrideParameters: -name "$(BASE_NAME)-kv-$(ENV)" -objectId $(SP_OBJ_ID) -createMode $(createmode)
      deploymentName: 'KeyvaultDeployment'
