# Template pipeline for the deployment of shared infrastructure
# that the ML workspaces depend on.
#
# This pipeline deploys a KeyVault instance, Two Storage accounts (one
# for the ML workspace logs, one as a shared data store), two Container
# Registries (one staging, one ML workspace-related) and an Application
# Insights instance. Storage accounts are preconfigured with a set of blob
# containers (initialization, metrics, datasets, ..)

steps:
  - download: current
    displayName: Download Artifacts
    artifact: $(armArtifactName)

  - task: AzureCLI@2
    displayName: Check if KeyVault exists
    condition: ne(variables['deploymentMode'], 'Validation')
    inputs:
      azureSubscription: $(AZURE_RM_SVC_CONNECTION)
      scriptType: 'bash'
      scriptLocation: 'scriptPath'
      scriptPath: $(Pipeline.Workspace)/$(armArtifactName)/a/scripts/check-keyvault.sh
      arguments: '$(BASE_NAME) $(ENV)'

  - task: AzureResourceManagerTemplateDeployment@3
    displayName: '$(deploymentMode): Key Vault'
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: $(AZURE_RM_SVC_CONNECTION)
      action: 'Create Or Update Resource Group'
      resourceGroupName: $(BASE_NAME)-rg-$(ENV)
      location: $(LOCATION)
      templateLocation: 'Linked artifact'
      csmFile: '$(Pipeline.Workspace)/$(armArtifactName)/a/keyvault/template.json'
      csmParametersFile: '$(Pipeline.Workspace)/$(armArtifactName)/a/keyvault/parameters.$(ENV).json'
      deploymentMode: $(deploymentMode)
      overrideParameters: -name "$(BASE_NAME)-kv-$(ENV)" -objectId $(SP_OBJ_ID) -createMode $(createmode)
      deploymentName: 'KeyvaultDeployment'
  
  # - task: AzureResourceManagerTemplateDeployment@3
  #   displayName: '$(deploymentMode): Log Analytics Workspace'
  #   inputs:
  #     deploymentScope: 'Resource Group'
  #     azureResourceManagerConnection: $(AZURE_RM_SVC_CONNECTION)
  #     action: 'Create Or Update Resource Group'
  #     resourceGroupName: $(BASE_NAME)-rg-$(ENV)
  #     location: $(LOCATION)
  #     templateLocation: 'Linked artifact'
  #     csmFile: '$(Pipeline.Workspace)/$(armArtifactName)/a/keyvault/template.json'
  #     csmParametersFile: '$(Pipeline.Workspace)/$(armArtifactName)/a/keyvault/parameters.$(ENV).json'
  #     deploymentMode: $(deploymentMode)
  #     overrideParameters: -name "$(BASE_NAME)-kv-$(ENV)" -objectId $(SP_OBJ_ID) -createMode $(createmode)
  #     deploymentName: 'KeyvaultDeployment'

  - task: AzureResourceManagerTemplateDeployment@3
    displayName: '$(deploymentMode): Application Insight'
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: $(AZURE_RM_SVC_CONNECTION)
      action: 'Create Or Update Resource Group'
      resourceGroupName: $(BASE_NAME)-rg-$(ENV)
      location: $(LOCATION)
      templateLocation: 'Linked artifact'
      csmFile: '$(Pipeline.Workspace)/$(armArtifactName)/a/appinsights/template.json'
      csmParametersFile: '$(Pipeline.Workspace)/$(armArtifactName)/a/appinsights/parameters.$(ENV).json'
      deploymentMode: $(deploymentMode)
      overrideParameters: --app "$(BASE_NAME)-appinsight-$(ENV)"
      deploymentName: 'KeyvaultDeployment'

  - task: AzureResourceManagerTemplateDeployment@3
    displayName: '$(deploymentMode): Container Registry'
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: $(AZURE_RM_SVC_CONNECTION)
      action: 'Create Or Update Resource Group'
      resourceGroupName: $(BASE_NAME)-rg-$(ENV)
      location: $(LOCATION)
      templateLocation: 'Linked artifact'
      csmFile: '$(Pipeline.Workspace)/$(armArtifactName)/a/container-registry/template.json'
      csmParametersFile: '$(Pipeline.Workspace)/$(armArtifactName)/a/container-registry/parameters.$(ENV).json'
      deploymentMode: $(deploymentMode)
      overrideParameters: -name "$(BASE_NAME)acr$(ENV)"
      deploymentName: 'ACRDeployment'