{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "name": {
      "type": "String"
    },
    "regionId": {
      "type": "string"
    },
    "tags": {
      "type": "object"
    },
    "administratorLogin": {
      "type": "string"
    },
    "administratorLoginPassword": {
      "type": "securestring"
    },
    "subnetObject": {
      "type": "object"
    },
    "apiVersion": {
      "type": "String"
    },
    "allowAzureIps": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Allow Azure Services to access server"
      }
    },
    "enableAdvancedDataSecurityAndVulnerabilityAssessments": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Describes whether to enable the additional security features"
      }
    },
    "aadAdminObjectId": {
      "type": "string"
    },
    "aadAdminUserName": {
      "type": "string"
    },
    "emailsForSecurityAlerts": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Email addresses to use for security alerts"
      }
    }
  },
  "variables": {
    "vaStorageName": "[concat('mmc', 'sqlsvasa', 'dev')]"
  },
  "resources": [
    {
      "condition": "[parameters('enableAdvancedDataSecurityAndVulnerabilityAssessments')]",
      "apiVersion": "2019-04-01",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('vaStorageName')]",
      "location": "[parameters('regionId')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [
            {
              "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('subnetObject').subnet.vnetName), '/subnets/', parameters('subnetObject').subnet.name)]",
              "action": "Allow"
            }
          ],
          "defaultAction": "Deny"
        }
      }
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "[parameters('apiVersion')]",
      "name": "[parameters('name')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "location": "[parameters('regionId')]",
      "kind": "v12.0",
      "properties": {
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        "version": "12.0",
        "publicNetworkAccess": "Enabled",
        "restrictOutboundNetworkAccess": "Disabled"
      },
      "resources": [
        {
          "condition": "[parameters('allowAzureIps')]",
          "type": "firewallrules",
          "apiVersion": "2015-05-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', parameters('name'))]"
          ],
          "location": "[parameters('regionId')]",
          "name": "AllowAllWindowsAzureIps",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          }
        },
        {
          "type": "administrators",
          "name": "activeDirectory",
          "apiVersion": "2014-04-01-preview",
          "location": "[parameters('regionId')]",
          "properties": {
            "administratorType": "ActiveDirectory",
            "login": "[parameters('aadAdminUserName')]",
            "sid": "[parameters('aadAdminObjectId')]",
            "tenantId": "[subscription().tenantId]"
          },
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', parameters('name'))]"
          ]
        }
      ]
    },
    {
      "type": "Microsoft.Sql/servers/virtualNetworkRules",
      "apiVersion": "[parameters('apiVersion')]",
      "name": "[concat(parameters('name'), '/sqlServerVnetRule')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('name'))]"
      ],
      "properties": {
        "virtualNetworkSubnetId": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('subnetObject').subnet.vnetName), '/subnets/', parameters('subnetObject').subnet.name)]",
        "ignoreMissingVnetServiceEndpoint": false
      }
    },
    {
      "condition": "[parameters('enableAdvancedDataSecurityAndVulnerabilityAssessments')]",
      "apiVersion": "2017-03-01-preview",
      "type": "Microsoft.Sql/servers/securityAlertPolicies",
      "name": "[concat(parameters('name'), '/Default')]",
      "dependsOn": ["[concat('Microsoft.Sql/servers/', parameters('name'))]"],
      "properties": {
        "state": "Enabled",
        "disabledAlerts": [],
        "emailAddresses": "[parameters('emailsForSecurityAlerts')]",
        "emailAccountAdmins": true
      }
    },
    {
      "condition": "[parameters('enableAdvancedDataSecurityAndVulnerabilityAssessments')]",
      "apiVersion": "2018-06-01-preview",
      "type": "Microsoft.Sql/servers/vulnerabilityAssessments",
      "name": "[concat(parameters('name'), '/Default')]",
      "properties": {
        "storageContainerPath": "[if(parameters('enableAdvancedDataSecurityAndVulnerabilityAssessments'), concat(reference(variables('vaStorageName'), '2018-02-01').primaryEndpoints.blob, 'vulnerability-assessment'), '')]",
        "recurringScans": {
          "isEnabled": true,
          "emailSubscriptionAdmins": true,
          "emails": "[parameters('emailsForSecurityAlerts')]"
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Sql/servers/', parameters('name'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('vaStorageName'))]",
        "[concat('Microsoft.Sql/servers/', parameters('name'), '/securityAlertPolicies/Default')]"
      ]
    },
    {
      "type": "Microsoft.Sql/servers/auditingPolicies",
      "apiVersion": "2014-04-01",
      "name": "[concat(parameters('name'), '/Default')]",
      "location": "West Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('name'))]"
      ],
      "properties": {
        "auditingState": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/auditingSettings",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('name'), '/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('name'))]"
      ],
      "properties": {
        "state": "Disabled",
        "retentionDays": 0,
        "auditActionsAndGroups": [],
        "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000",
        "isStorageSecondaryKeyInUse": false,
        "isAzureMonitorTargetEnabled": false
      }
    },
    {
      "type": "Microsoft.Sql/servers/extendedAuditingSettings",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('name'), '/Default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('name'))]"
      ],
      "properties": {
        "state": "Disabled",
        "retentionDays": 0,
        "auditActionsAndGroups": [],
        "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000",
        "isStorageSecondaryKeyInUse": false,
        "isAzureMonitorTargetEnabled": false
      }
    }
  ],
  "outputs": {
    "resourceName": {
      "type": "string",
      "value": "[parameters('name')]"
    },
    "resourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Sql/servers', parameters('name'))]"
    }
  }
}
