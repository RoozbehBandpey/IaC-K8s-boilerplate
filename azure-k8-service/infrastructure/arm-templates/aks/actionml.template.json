{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "name": {
      "type": "String"
    },
    "systemAgentPool": {
      "type": "Object"
    },
    "userAgentPool": {
      "type": "Object"
    },
    "kubernetesVersion": {
      "type": "String"
    },
    "apiVersion": {
      "type": "String"
    },
    "subnetObject": {
      "type": "object"
    },
    "logAnalyticsWorkspace": {
      "type": "String"
    },
    "regionId": {
      "type": "string"
    },
    "tags": {
      "type": "object"
    },
    "publicIPAddress": {
      "type": "string"
    },
    "aadProfile": {
      "type": "object"
    },
    "enableHttpApplicationRouting": {
      "type": "bool"
    },
    "enableRBAC": {
      "type": "bool"
    },
    "serviceCidr": {
      "type": "string"
    },
    "dnsServiceIP": {
      "type": "string"
    },
    "dockerBridgeCidr": {
      "type": "string"
    },
    "linuxAdminUsername": {
      "type": "string"
    },
    "sshRSAPublicKey": {
      "type": "string"
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.ContainerService/managedClusters",
      "apiVersion": "[parameters('apiVersion')]",
      "name": "[parameters('name')]",
      "location": "[parameters('regionId')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "Basic",
        "tier": "Free"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "kubernetesVersion": "[parameters('kubernetesVersion')]",
        "dnsPrefix": "[concat(parameters('name'), '-dns')]",
        "aadProfile": {
          "managed": "[parameters('aadProfile').managed]",
          "adminGroupObjectIds": "[parameters('aadProfile').adminGroupObjectIds]",
          "tenantID": "[subscription().tenantId]"
        },
        "addonProfiles": {
          "httpApplicationRouting": {
            "enabled": "[parameters('enableHttpApplicationRouting')]"
          },
          "azurepolicy": {
            "enabled": false
          },
          "omsAgent": {
            "enabled": true,
            "config": {
              "logAnalyticsWorkspaceResourceID": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspace'))]"
            }
          }
        },
        "agentPoolProfiles": [
          {
            "name": "[parameters('systemAgentPool').name]",
            "count": "[parameters('systemAgentPool').nodeCount]",
            "vmSize": "[parameters('systemAgentPool').vmSize]",
            "osDiskSizeGB": "[parameters('systemAgentPool').osDiskSizeGB]",
            "osDiskType": "[parameters('systemAgentPool').osDiskType]",
            "kubeletDiskType": "[parameters('systemAgentPool').kubeletDiskType]",
            "vnetSubnetID": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('subnetObject').subnet.vnetName), '/subnets/', parameters('subnetObject').subnet.name)]",
            "maxPods": "[parameters('systemAgentPool').maxPods]",
            "type": "[parameters('systemAgentPool').type]",
            "orchestratorVersion": "[parameters('kubernetesVersion')]",
            "nodeLabels": "[parameters('systemAgentPool').nodeLabels]",
            "mode": "[parameters('systemAgentPool').mode]",
            "osType": "[parameters('systemAgentPool').osType]",
            "osSKU": "[parameters('systemAgentPool').osSKU]",
            "enableFIPS": false
          },
          {
            "name": "[parameters('userAgentPool').name]",
            "count": "[parameters('userAgentPool').nodeCount]",
            "vmSize": "[parameters('userAgentPool').vmSize]",
            "osDiskSizeGB": "[parameters('userAgentPool').osDiskSizeGB]",
            "osDiskType": "[parameters('userAgentPool').osDiskType]",
            "kubeletDiskType": "[parameters('userAgentPool').kubeletDiskType]",
            "vnetSubnetID": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('subnetObject').subnet.vnetName), '/subnets/', parameters('subnetObject').subnet.name)]",
            "maxPods": "[parameters('userAgentPool').maxPods]",
            "type": "[parameters('userAgentPool').type]",
            "orchestratorVersion": "[parameters('kubernetesVersion')]",
            "nodeLabels": "[parameters('userAgentPool').nodeLabels]",
            "mode": "[parameters('userAgentPool').mode]",
            "osType": "[parameters('userAgentPool').osType]",
            "osSKU": "[parameters('userAgentPool').osSKU]",
            "enableFIPS": false
          }
        ],
        "linuxProfile": {
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "ssh": {
            "publicKeys": [
              {
                "keyData": "[parameters('sshRSAPublicKey')]"
              }
            ]
          }
        },
        "nodeResourceGroup": "[concat(resourceGroup().name, '-nodes')]",
        "enableRBAC": "[parameters('enableRBAC')]",

        "networkProfile": {
          "networkPlugin": "azure",
          "loadBalancerSku": "Standard",
          "loadBalancerProfile": {
            "managedOutboundIPs": {
              "count": 1
            },
            "effectiveOutboundIPs": [
              {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddress'))]"
              }
            ]
          },
          "serviceCidr": "[parameters('serviceCidr')]",
          "dnsServiceIP": "[parameters('dnsServiceIP')]",
          "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]",
          "outboundType": "loadBalancer"
        },
        "apiServerAccessProfile": {
          "enablePrivateCluster": false
        }
      }
    },
    {
      "type": "Microsoft.ContainerService/managedClusters/agentPools",
      "apiVersion": "[parameters('apiVersion')]",
      "name": "[concat(parameters('name'),  '/', parameters('systemAgentPool').name)]",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerService/managedClusters', parameters('name'))]"
      ],
      "properties": {
        "count": "[parameters('systemAgentPool').nodeCount]",
        "vmSize": "[parameters('systemAgentPool').vmSize]",
        "osDiskSizeGB": "[parameters('systemAgentPool').osDiskSizeGB]",
        "osDiskType": "[parameters('systemAgentPool').osDiskType]",
        "kubeletDiskType": "[parameters('systemAgentPool').kubeletDiskType]",
        "vnetSubnetID": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('subnetObject').subnet.vnetName), '/subnets/', parameters('subnetObject').subnet.name)]",
        "maxPods": "[parameters('systemAgentPool').maxPods]",
        "type": "[parameters('systemAgentPool').type]",
        "orchestratorVersion": "[parameters('kubernetesVersion')]",
        "nodeLabels": "[parameters('systemAgentPool').nodeLabels]",
        "mode": "[parameters('systemAgentPool').mode]",
        "osType": "[parameters('systemAgentPool').osType]",
        "osSKU": "[parameters('systemAgentPool').osSKU]",
        "enableFIPS": false
      }
    },
    {
      "type": "Microsoft.ContainerService/managedClusters/agentPools",
      "apiVersion": "[parameters('apiVersion')]",
      "name": "[concat(parameters('name'), '/', parameters('userAgentPool').name)]",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerService/managedClusters', parameters('name'))]"
      ],
      "properties": {
        "count": "[parameters('userAgentPool').nodeCount]",
        "vmSize": "[parameters('userAgentPool').vmSize]",
        "osDiskSizeGB": "[parameters('userAgentPool').osDiskSizeGB]",
        "osDiskType": "[parameters('userAgentPool').osDiskType]",
        "kubeletDiskType": "[parameters('userAgentPool').kubeletDiskType]",
        "vnetSubnetID": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('subnetObject').subnet.vnetName), '/subnets/', parameters('subnetObject').subnet.name)]",
        "maxPods": "[parameters('userAgentPool').maxPods]",
        "type": "[parameters('userAgentPool').type]",
        "orchestratorVersion": "[parameters('kubernetesVersion')]",
        "nodeLabels": "[parameters('userAgentPool').nodeLabels]",
        "mode": "[parameters('userAgentPool').mode]",
        "osType": "[parameters('userAgentPool').osType]",
        "osSKU": "[parameters('userAgentPool').osSKU]",
        "enableFIPS": false
      }
    }
  ],
  "outputs": {
    "resourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.ContainerService/managedClusters', parameters('name'))]"
    }
  }
}
