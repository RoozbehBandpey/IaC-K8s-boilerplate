{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "name": {
            "type": "string"
        },
        "regionId": {
            "type": "string"
        },
		"apiVersion": {
			"type": "string"
		},
        "createMode": {
            "type": "string"
        },
        "subnetObject": {
            "type": "object"
        },
        "sku": {
            "type": "object"
        },
		"accessPolicies": {
			"type": "array"
		},
		"tags": {
			"type": "object"
		}
    },
    "variables": {
    },
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[parameters('name')]",
			"apiVersion": "[parameters('apiVersion')]",
            "location": "[parameters('regionId')]",
			"tags": "[parameters('tags')]",
            "scale": null,
            "properties": {
                "sku": {
                    "family": "[parameters('sku').family]",
                    "name": "[parameters('sku').name]"
                },
                "tenantId": "[subscription().tenantId]",
                "createMode": "[parameters('createMode')]",
                "enabledForTemplateDeployment": true,
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "softDeleteRetentionInDays": 90,
                "vaultUri": "[concat('https://', parameters('name'), '.vault.azure.net/')]",
                "provisioningState": "Succeeded",
				"networkAcls": {
					"bypass": "AzureServices",
					"defaultAction": "Deny",
					"ipRules": [],
					"virtualNetworkRules": [
						{
							"id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('subnetObject').subnet.vnetName), '/subnets/', parameters('subnetObject').subnet.name)]",
							"ignoreMissingVnetServiceEndpoint": false
						}
					]
				},
				"accessPolicies": "[parameters('accessPolicies')]"
            },
            "dependsOn": [
            ]
        }
    ],
    "outputs": {
        "resourceId": {
            "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('name'))]",
            "type": "string"
        }
    }
}