{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workstreamName": {
            "type": "string",
            "metadata": {
                "description": "Name of the workstream the resource is for"
            }
        },
        "purpose": {
            "type": "string",
            "metadata": {
                "description": "Purpose of the resource, will be part of the resource's name"
            }
        },
        "env": {
            "type": "string",
            "allowedValues": [
                "dev",
                "int",
                "prd"
            ],
            "metadata": {
                "description": "Environment the resource will be deployed to"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Region the resource will be deployed to"
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "[concat('atiit4ad-network-vnet-', parameters('env'))]",
            "metadata": {
                "description": "Name of the VNET the resource will be bound to"
            }
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                "description": "Name of the subnet the resource will be bound to"
            }
        },
        "vnetResourceGroupName": {
            "type": "string",
            "defaultValue": "[concat('atiit4ad-network-', parameters('env'))]",
            "metadata": {
                "description": "Name of the resource group of the VNET the resource will be bound to"
            }
        },
        "windowsOSVersion": {
            "type": "string",
            "defaultValue": "2019-Datacenter",
            "allowedValues": [
                "2008-R2-SP1",
                "2012-Datacenter",
                "2012-R2-Datacenter",
                "2016-Nano-Server",
                "2016-Datacenter-with-Containers",
                "2016-Datacenter",
                "2019-Datacenter"
            ],
            "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A2_v2",
            "metadata": {
                "description": "Size of the virtual machine."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "dataDisks": {
            "type": "array",
            "defaultValue": [
            ],
            "metadata": {
                "description": "Define additonal disks to attach to the VM"
            }
        },
        "loginWithAAD": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Should the VM support login using AAD credentials?"
            }
        },
        "enableAutomaticUpdates": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Specifies whether the VM updates automatically"
            }
        },
        "vmUsers": {
            "type": "array",
            "defaultValue": [
            ],
            "metadata": {
                "description": "List of users for the VM. Each user is a JSON Object with role (either vmAdministrator or vmUser) and AAD object Id"
            }
        }
    },
    "variables": {
        "vmName": "[concat(parameters('purpose'), '-vm-', parameters('env'))]",
        "subnetId": "[resourceId(parameters('vnetResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets/', parameters('vnetName'), parameters('subnetName'))]",
        "storageAccountName": "[concat(parameters('workstreamName'), substring(parameters('purpose'), 0, 4) ,'vmdiagsa', parameters('env'))]",
        "networkSecurityGroupName": "[concat(parameters('workstreamName'), '-', parameters('purpose'), '-vm-nsg-', parameters('env'))]",
        "nicName": "[concat(parameters('workstreamName'), '-', parameters('purpose'), '-vm-nic-', parameters('env'))]",
        "vmAdministrator": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '1c0163c0-47e6-4577-8991-ea5c82e286e4')]",
        "vmUser": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'fb879df8-f326-4884-b1cf-06f3ad86be52')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "supportsHttpsTrafficOnly": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                        {
                            "id": "[variables('subnetId')]",
                            "action": "Allow"
                        }
                    ],
                    "defaultAction": "Deny"
                }
            }
        },
        {
            "comments": "Default Network Security Group for template",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-08-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-3389",
                        "properties": {
                            "priority": 1000,
                            "access": "Allow",
                            "direction": "Inbound",
                            "destinationPortRange": "3389",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*"
                        }
                    },
                    {
                        "name": "default-allow-outbound",
                        "properties": {
                            "priority": 1000,
                            "access": "Allow",
                            "direction": "Outbound",
                            "destinationPortRange": "*",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-09-01",
            "name": "[variables('nicName')]",
            "location": "[parameters('location')]",
            "dependsOn":[
                "[variables('networkSecurityGroupName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[variables('vmName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": "[parameters('enableAutomaticUpdates')]",
                        "provisionVMAgent": true
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[parameters('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": "[parameters('dataDisks')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
                    }
                }
            },
            "resources": [
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(variables('vmName'),'/', 'Antimalware')]",
                    "apiVersion": "2019-03-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Security",
                        "type": "IaaSAntimalware",
                        "typeHandlerVersion": "1.3",
                        "settings": {
                            "AntimalwareEnabled": "true",
                            "Exclusions": {
                                "Extensions": ".log;.ldf",
                                "Paths": "D:\\IISlogs;D:\\DatabaseLogs",
                                "Processes": "mssence.svc"
                            },

                            "RealtimeProtectionEnabled": "true",
                            "ScheduledScanSettings": {
                                "isEnabled": "true",
                                "scanType": "Quick",
                                "day": "7",
                                "time": "120"
                            }
                        },
                        "protectedSettings": null
                    }
                },
                {
                    "condition": "[and(parameters('loginWithAAD'), equals(parameters('windowsOSVersion'), '2019-Datacenter'))]",
                    "name": "[concat(variables('vmName'),'/AADLoginForWindows')]",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2019-03-01",
                    "location": "[parameters('location')]",
                    "properties": {
                        "publisher": "Microsoft.Azure.ActiveDirectory",
                        "type": "AADLoginForWindows",
                        "typeHandlerVersion": "0.3",
                        "autoUpgradeMinorVersion": true
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
                    ]
                }
            ]
        },
        {
            "condition": "[and(parameters('loginWithAAD'), equals(parameters('windowsOSVersion'), '2019-Datacenter'), greater(length(parameters('vmUsers')), 0))]",
            "type": "Microsoft.Compute/virtualMachines/providers/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[concat(variables('vmName'), '/Microsoft.Authorization/', guid(uniqueString(concat(variables('vmName'), string(copyIndex())))))]",
            "properties": {
                "roleDefinitionId": "[variables(parameters('vmUsers')[copyIndex()].role)]",
                "principalId": "[parameters('vmUsers')[copyIndex()].objectId]"
            },
            "copy": {
                "name": "rolebindings",
                "count": "[max(length(parameters('vmUsers')), 1)]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[concat(variables('storageAccountName'), '/Microsoft.Authorization/', guid(uniqueString(variables('storageAccountName'))))]",
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines', variables('vmName')), '2017-12-01', 'Full').identity.principalId]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
            ]
        }
    ],
    "outputs": {
        "resourceName": {
            "type": "string",
            "value": "[variables('vmName')]"
        },
        "resourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Computer/virtualMachines', variables('vmName'))]"
        }
    }
}